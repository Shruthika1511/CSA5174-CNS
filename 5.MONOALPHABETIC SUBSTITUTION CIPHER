#5.MONOALPHABETIC CIPHER
import random

def generate_key():
    """Generate a random monoalphabetic substitution key"""
    alphabet = "abcdefghijklmnopqrstuvwxyz"
    shuffled_alphabet = random.sample(alphabet, len(alphabet))
    return dict(zip(alphabet, shuffled_alphabet))

def encrypt(plaintext, key):
    """Encrypt plaintext using a monoalphabetic substitution cipher"""
    ciphertext = ""
    for char in plaintext.lower():
        if char.isalpha():
            ciphertext += key[char]
        else:
            ciphertext += char
    return ciphertext

def decrypt(ciphertext, key):
    """Decrypt ciphertext using a monoalphabetic substitution cipher"""
    plaintext = ""
    for char in ciphertext.lower():
        if char.isalpha():
            for k, v in key.items():
                if v == char:
                    plaintext += k
        else:
            plaintext += char
    return plaintext

# Example usage:
key = generate_key()
plaintext = "the quick brown fox jumps over the lazy dog"
ciphertext = encrypt(plaintext, key)
decrypted_plaintext = decrypt(ciphertext, key)

print("Plaintext: ", plaintext)
print("Ciphertext:", ciphertext)
print("Decrypted plaintext:", decrypted_plaintext)
print("Key:", key)
